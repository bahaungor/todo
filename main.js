(()=>{"use strict";var e={d:(t,o)=>{for(var c in o)e.o(o,c)&&!e.o(t,c)&&Object.defineProperty(t,c,{enumerable:!0,get:o[c]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{a:()=>p});const t=document.querySelector(".sidebar"),o=document.querySelector(".side-menu-opener"),c=document.querySelector(".main");let n=!0;function r(e){console.log(p),confirm("Are you sure you want to delete this project & tasks inside it?")&&(l.splice(p,1),localStorage.setItem("projects_by_baha",JSON.stringify(l)),loadProjects())}o.addEventListener("click",(function(){n?(t.style.display="none",c.style.gridTemplateColumns="1fr",n=!1):(t.style.display="block",c.style.gridTemplateColumns="350px 1fr",n=!0)})),document.querySelectorAll(".delete-button").forEach((e=>e.addEventListener("click",r)));const l=JSON.parse(localStorage.getItem("projects_by_baha"))||[];function s(){const e=document.querySelector(".projects");e.innerHTML="",l.forEach((t=>{const o=document.createElement("div");o.classList.add("project"),o.dataset.id=t.id;const c=document.createElement("div");c.classList.add("project-title"),c.textContent=t.projectTitle;const n=document.createElement("img");n.classList.add("menu-icon"),n.classList.add("edit-button"),n.setAttribute("src","../src/images/edit.png");const l=document.createElement("img");l.classList.add("menu-icon"),l.classList.add("delete-button"),l.setAttribute("src","../src/images/delete.png"),l.addEventListener("click",r),o.appendChild(c),o.appendChild(n),o.appendChild(l),e.appendChild(o)})),function(){const e=document.querySelectorAll(".project");e.forEach((t=>t.addEventListener("click",(t=>{!function(t){e.forEach((e=>e.classList.remove("active"))),t.currentTarget.classList.add("active"),p=t.currentTarget.dataset.id}(t),document.querySelector(".add-task").classList.remove("hidden"),function(e){document.querySelector(".content-title").textContent=e.currentTarget.textContent}(t)}))))}(),function(){function e(e){openProjectForm(),formEdit=!0,form.querySelector(".project-form-input").value=e.target.parentNode.textContent}document.querySelectorAll(".edit-button").forEach((t=>t.addEventListener("click",e)))}()}s();const a=document.querySelectorAll(".sidebar-item"),i=document.querySelector(".content-title");a.forEach((e=>e.addEventListener("click",(e=>{!function(e){a.forEach((e=>e.classList.remove("active"))),e.target.classList.add("active")}(e),function(e){i.textContent="",i.textContent=e.target.textContent,document.querySelector(".add-task").classList.add("hidden")}(e),listTaks(e)}))));const d=document.querySelector(".project-form");function u(){document.querySelector(".project-form-input").value="",d.style.display="none"}document.querySelector(".add-button").addEventListener("click",(function(){d.style.display="flex"})),document.querySelector(".project-form-button.cancel").addEventListener("click",u);let m=!1,p="";d.addEventListener("submit",(function(e){if(e.preventDefault(),m)l[p].projectTitle=d.querySelector(".project-form-input").value,m=!1,localStorage.setItem("projects_by_baha",JSON.stringify(l)),s(),u();else{const e=function(e){console.log("factory called");return{projectTitle:e,id:l.length}}(document.querySelector(".project-form-input").value);l.push(e),console.log(l),localStorage.setItem("projects_by_baha",JSON.stringify(l)),s(),u()}}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,